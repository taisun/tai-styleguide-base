@mixin g-reset {
  html, body, div, span, applet, object, iframe,
  h1, h2, h3, h4, h5, h6, p, blockquote, pre,
  a, abbr, acronym, address, big, cite, code,
  del, dfn, em, img, ins, kbd, q, s, samp,
  small, strike, strong, sub, sup, tt, var,
  b, u, i, center,
  dl, dt, dd, ol, ul, li,
  fieldset, form, label, legend,
  table, caption, tbody, tfoot, thead, tr, th, td,
  article, aside, canvas, details, embed,
  figure, figcaption, footer, header, hgroup,
  menu, nav, output, ruby, section, summary,
  time, mark, audio, video {
  	margin: 0;
  	padding: 0;
  	border: 0;
    font: inherit;
    font-size: 100%;
    vertical-align: baseline;
  }
  html {
    line-height: 1;
  }
  ol, ul {
    list-style: none;
  }
  table {
   	border-collapse: collapse;
  	border-spacing: 0;
  }
  caption, th, td {
    text-align: left;
  	font-weight: normal;
  	vertical-align: middle;
  }
  q, blockquote {
    quotes: none;
	  &:before, &:after {
	    content: "";
	    content: none;
	  }
  }
  a img {
    border: none;
    outline: none;
  }
}

@mixin clearfix() {
	&::before,
	&::after {
		content: " ";
		display: table;
	}
	&::after {
		clear: both;
	}
	zoom: 1;
}

@mixin Wfont($font-name, $font-filepath-and-name){
  @font-face {
  	font-family: $font-name;
  	src: url($font-filepath-and-name+".eot"); 
  	src: url($font-filepath-and-name+".eot?#iefix") format('embedded-opentype'), 
  	     url($font-filepath-and-name+".woff") format('woff'),
  	     url($font-filepath-and-name+".ttf")  format('truetype'),
  	     url($font-filepath-and-name+".svg#svgFontName") format('svg');
  	}
}

@mixin grid($cols){
	 $wi: 100/$cols;
   $iewi: 960/$cols;
	 @for $i from 1 through $cols {
	 	.g-col__#{$i}{
	 		width: $wi*$i+0%;
      width: $iewi*$i*1px\9;
	 		display: inline-block;
      float: left;
	 		vertical-align: middle;
	 	}
	 }	
}
@mixin gridTbl($cols){
  $wi: 100/$cols;
   @for $i from 1 through $cols {
    .g-colT__#{$i}{
      width: $wi*$i+0%;
      display: table-cell;
      vertical-align: top;
    }
   }
}
@mixin noneHeight($lineHi:$font-lineHeight, $fz:$font-size, $bottom:0){
  $hi: (($lineHi*$fz)-$fz)/2;
  margin-top: $hi*-1px;
  margin-bottom: $hi*-1px; 
  @if $bottom != 0 {
    padding-bottom: $bottom*1px;
  }
}